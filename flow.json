[
    {
        "id": "6a1f8a5ca3afbf67",
        "type": "tab",
        "label": "Product",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "28963921f204c0c1",
        "type": "tab",
        "label": "Category",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "f2fce4517402e624",
        "type": "tab",
        "label": "Order",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "ca590b695bf62f7d",
        "type": "tab",
        "label": "Flow 1",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "9426b3d2a90eb91b",
        "type": "mongodb",
        "hostname": "mongodb-0409-ubos-c766j-mongodb-0409.ubos-c766j",
        "topology": "direct",
        "connectOptions": "authSource=admin",
        "port": "27017",
        "db": "mongodb-0409",
        "name": ""
    },
    {
        "id": "46ec6a7146ad9936",
        "type": "function",
        "z": "6a1f8a5ca3afbf67",
        "name": "create new product",
        "func": "msg.payload.deleted = false;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 200,
        "wires": [
            [
                "6b7776a45dd1e6b8",
                "f3d2ab70e6440e0d"
            ]
        ]
    },
    {
        "id": "56162ada55798ed4",
        "type": "http in",
        "z": "6a1f8a5ca3afbf67",
        "name": "",
        "url": "/product/new",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 200,
        "wires": [
            [
                "46ec6a7146ad9936"
            ]
        ]
    },
    {
        "id": "6b7776a45dd1e6b8",
        "type": "mongodb out",
        "z": "6a1f8a5ca3afbf67",
        "mongodb": "9426b3d2a90eb91b",
        "name": "db",
        "collection": "product",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 530,
        "y": 200,
        "wires": []
    },
    {
        "id": "3fbc5f93d902adec",
        "type": "function",
        "z": "6a1f8a5ca3afbf67",
        "name": "get all products",
        "func": "msg.payload = {};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 280,
        "wires": [
            [
                "4981c2715c5848fe"
            ]
        ]
    },
    {
        "id": "5c6d57385b9ca07c",
        "type": "http in",
        "z": "6a1f8a5ca3afbf67",
        "name": "",
        "url": "/product/all",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 120,
        "y": 280,
        "wires": [
            [
                "3fbc5f93d902adec"
            ]
        ]
    },
    {
        "id": "f3d2ab70e6440e0d",
        "type": "http response",
        "z": "6a1f8a5ca3afbf67",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 530,
        "y": 140,
        "wires": []
    },
    {
        "id": "7502d79545b29545",
        "type": "http response",
        "z": "6a1f8a5ca3afbf67",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 630,
        "y": 280,
        "wires": []
    },
    {
        "id": "4981c2715c5848fe",
        "type": "mongodb in",
        "z": "6a1f8a5ca3afbf67",
        "mongodb": "9426b3d2a90eb91b",
        "name": "db",
        "collection": "product",
        "operation": "find",
        "x": 490,
        "y": 280,
        "wires": [
            [
                "7502d79545b29545"
            ]
        ]
    },
    {
        "id": "5cab7c62da2d2096",
        "type": "function",
        "z": "6a1f8a5ca3afbf67",
        "name": "delete a product",
        "func": "msg.payload = { \"_id\": objectid(msg.payload._id) }\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "objectid",
                "module": "objectid"
            }
        ],
        "x": 340,
        "y": 360,
        "wires": [
            [
                "5f878a240ab53d14",
                "541213996fd12caa"
            ]
        ]
    },
    {
        "id": "8c2ad8fd48072793",
        "type": "http in",
        "z": "6a1f8a5ca3afbf67",
        "name": "",
        "url": "/product/delete",
        "method": "delete",
        "upload": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 360,
        "wires": [
            [
                "5cab7c62da2d2096"
            ]
        ]
    },
    {
        "id": "541213996fd12caa",
        "type": "http response",
        "z": "6a1f8a5ca3afbf67",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 530,
        "y": 420,
        "wires": []
    },
    {
        "id": "5f878a240ab53d14",
        "type": "mongodb out",
        "z": "6a1f8a5ca3afbf67",
        "mongodb": "9426b3d2a90eb91b",
        "name": "db",
        "collection": "product",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 530,
        "y": 360,
        "wires": []
    },
    {
        "id": "b78993240196171f",
        "type": "function",
        "z": "6a1f8a5ca3afbf67",
        "name": "get by id a product",
        "func": "msg.payload = { \"_id\": objectid(msg.req.params.id) }\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "objectid",
                "module": "objectid"
            }
        ],
        "x": 350,
        "y": 480,
        "wires": [
            [
                "169cc91b036a28b6"
            ]
        ]
    },
    {
        "id": "ee5d858a9f6e22fa",
        "type": "http in",
        "z": "6a1f8a5ca3afbf67",
        "name": "",
        "url": "/product/:id",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 120,
        "y": 480,
        "wires": [
            [
                "b78993240196171f"
            ]
        ]
    },
    {
        "id": "225f7cfe2d2c1387",
        "type": "http response",
        "z": "6a1f8a5ca3afbf67",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 670,
        "y": 480,
        "wires": []
    },
    {
        "id": "169cc91b036a28b6",
        "type": "mongodb in",
        "z": "6a1f8a5ca3afbf67",
        "mongodb": "9426b3d2a90eb91b",
        "name": "db",
        "collection": "product",
        "operation": "find",
        "x": 530,
        "y": 480,
        "wires": [
            [
                "225f7cfe2d2c1387"
            ]
        ]
    },
    {
        "id": "54069cc314c4c2ee",
        "type": "http in",
        "z": "6a1f8a5ca3afbf67",
        "name": "",
        "url": "/product/update",
        "method": "put",
        "upload": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 540,
        "wires": [
            [
                "6565ed7b7d69025b"
            ]
        ]
    },
    {
        "id": "6565ed7b7d69025b",
        "type": "function",
        "z": "6a1f8a5ca3afbf67",
        "name": "update by id",
        "func": "msg.query = { \"_id\": objectid(msg.payload._id) }\ndelete msg.payload._id\nmsg.payload = {\n    $set: msg.payload\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "objectid",
                "module": "objectid"
            }
        ],
        "x": 350,
        "y": 540,
        "wires": [
            [
                "198cb6c060576c75",
                "9972b47934051f63"
            ]
        ]
    },
    {
        "id": "198cb6c060576c75",
        "type": "mongodb out",
        "z": "6a1f8a5ca3afbf67",
        "mongodb": "9426b3d2a90eb91b",
        "name": "db",
        "collection": "product",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "update",
        "x": 530,
        "y": 540,
        "wires": []
    },
    {
        "id": "9972b47934051f63",
        "type": "http response",
        "z": "6a1f8a5ca3afbf67",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 530,
        "y": 600,
        "wires": []
    },
    {
        "id": "15943fa07ac2d0e1",
        "type": "http in",
        "z": "6a1f8a5ca3afbf67",
        "name": "",
        "url": "/total-quantity",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 1940,
        "wires": [
            [
                "8a7d5ae9ab401f86"
            ]
        ]
    },
    {
        "id": "8a7d5ae9ab401f86",
        "type": "function",
        "z": "6a1f8a5ca3afbf67",
        "name": "Get the total quantity of products for each category",
        "func": "msg.payload = [\n    {\n        $addFields: {\n            categoryObjId: { $toObjectId: \"$categoryId\" }\n        }\n    },\n    {\n        $lookup: {\n            from: \"category\",\n            localField: \"categoryObjId\",\n            foreignField: \"_id\",\n            as: \"category_info\"\n        }\n    },\n    {\n        $group: {\n            _id: \"$categoryObjId\",\n            category_name: { $first: \"$category_info.name\"},\n            total_quantity: { $sum: \"$quantity\" }\n        }\n    }\n];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "objectid",
                "module": "objectid"
            }
        ],
        "x": 450,
        "y": 1940,
        "wires": [
            [
                "64b559e9ff70e0a5"
            ]
        ]
    },
    {
        "id": "edbfa2672082d58a",
        "type": "http response",
        "z": "6a1f8a5ca3afbf67",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 870,
        "y": 1940,
        "wires": []
    },
    {
        "id": "64b559e9ff70e0a5",
        "type": "mongodb in",
        "z": "6a1f8a5ca3afbf67",
        "mongodb": "9426b3d2a90eb91b",
        "name": "db",
        "collection": "product",
        "operation": "aggregate",
        "x": 730,
        "y": 1940,
        "wires": [
            [
                "edbfa2672082d58a"
            ]
        ]
    },
    {
        "id": "95e06ffcf7a8da60",
        "type": "function",
        "z": "6a1f8a5ca3afbf67",
        "name": "create new category",
        "func": "msg.payload.deleted = false;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 800,
        "wires": [
            [
                "4e581120dd1ce60d",
                "fc6fce4f20ee6d49"
            ]
        ]
    },
    {
        "id": "40eedc180a0a7d04",
        "type": "http in",
        "z": "6a1f8a5ca3afbf67",
        "name": "",
        "url": "/category/new",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 800,
        "wires": [
            [
                "95e06ffcf7a8da60"
            ]
        ]
    },
    {
        "id": "4e581120dd1ce60d",
        "type": "mongodb out",
        "z": "6a1f8a5ca3afbf67",
        "mongodb": "9426b3d2a90eb91b",
        "name": "db",
        "collection": "category",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 530,
        "y": 800,
        "wires": []
    },
    {
        "id": "dbe383963483b4ee",
        "type": "function",
        "z": "6a1f8a5ca3afbf67",
        "name": "get all categories",
        "func": "msg.payload = {};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 880,
        "wires": [
            [
                "95a67d1bdc875f2a"
            ]
        ]
    },
    {
        "id": "4c471caa753db5df",
        "type": "http in",
        "z": "6a1f8a5ca3afbf67",
        "name": "",
        "url": "/category/all",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 120,
        "y": 880,
        "wires": [
            [
                "dbe383963483b4ee"
            ]
        ]
    },
    {
        "id": "fc6fce4f20ee6d49",
        "type": "http response",
        "z": "6a1f8a5ca3afbf67",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 530,
        "y": 720,
        "wires": []
    },
    {
        "id": "003a83adef272bae",
        "type": "http response",
        "z": "6a1f8a5ca3afbf67",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 630,
        "y": 880,
        "wires": []
    },
    {
        "id": "95a67d1bdc875f2a",
        "type": "mongodb in",
        "z": "6a1f8a5ca3afbf67",
        "mongodb": "9426b3d2a90eb91b",
        "name": "db",
        "collection": "category",
        "operation": "find",
        "x": 490,
        "y": 880,
        "wires": [
            [
                "003a83adef272bae"
            ]
        ]
    },
    {
        "id": "29a4d63b30e12c96",
        "type": "function",
        "z": "6a1f8a5ca3afbf67",
        "name": "delete a category",
        "func": "msg.payload = { \"_id\": objectid(msg.payload._id) }\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "objectid",
                "module": "objectid"
            }
        ],
        "x": 410,
        "y": 940,
        "wires": [
            [
                "ac221cc204fbda70",
                "897d9a103f966818"
            ]
        ]
    },
    {
        "id": "6e74ac3a9e0ed94a",
        "type": "http in",
        "z": "6a1f8a5ca3afbf67",
        "name": "",
        "url": "/category/delete",
        "method": "delete",
        "upload": false,
        "swaggerDoc": "",
        "x": 150,
        "y": 940,
        "wires": [
            [
                "29a4d63b30e12c96"
            ]
        ]
    },
    {
        "id": "897d9a103f966818",
        "type": "http response",
        "z": "6a1f8a5ca3afbf67",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 610,
        "y": 1000,
        "wires": []
    },
    {
        "id": "ac221cc204fbda70",
        "type": "mongodb out",
        "z": "6a1f8a5ca3afbf67",
        "mongodb": "9426b3d2a90eb91b",
        "name": "db",
        "collection": "category",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 610,
        "y": 940,
        "wires": []
    },
    {
        "id": "f97704a80bdbafe7",
        "type": "function",
        "z": "6a1f8a5ca3afbf67",
        "name": "get by id a category",
        "func": "msg.payload = { \"_id\": objectid(msg.req.params.id) }\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "objectid",
                "module": "objectid"
            }
        ],
        "x": 340,
        "y": 1060,
        "wires": [
            [
                "c18114c7040cbd50"
            ]
        ]
    },
    {
        "id": "a4ca4d9537cda126",
        "type": "http in",
        "z": "6a1f8a5ca3afbf67",
        "name": "",
        "url": "/category/:id",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 120,
        "y": 1060,
        "wires": [
            [
                "f97704a80bdbafe7"
            ]
        ]
    },
    {
        "id": "93af3c69f2204345",
        "type": "http response",
        "z": "6a1f8a5ca3afbf67",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 670,
        "y": 1060,
        "wires": []
    },
    {
        "id": "c18114c7040cbd50",
        "type": "mongodb in",
        "z": "6a1f8a5ca3afbf67",
        "mongodb": "9426b3d2a90eb91b",
        "name": "db",
        "collection": "category",
        "operation": "find",
        "x": 530,
        "y": 1060,
        "wires": [
            [
                "93af3c69f2204345"
            ]
        ]
    },
    {
        "id": "a8c757d3e408a4ea",
        "type": "http in",
        "z": "6a1f8a5ca3afbf67",
        "name": "",
        "url": "/category/update",
        "method": "put",
        "upload": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 1120,
        "wires": [
            [
                "c3ba4f72350d41b9"
            ]
        ]
    },
    {
        "id": "c3ba4f72350d41b9",
        "type": "function",
        "z": "6a1f8a5ca3afbf67",
        "name": "update category by id",
        "func": "msg.query = { \"_id\": objectid(msg.payload._id) }\ndelete msg.payload._id\nmsg.payload = {\n    $set: msg.payload\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "objectid",
                "module": "objectid"
            }
        ],
        "x": 380,
        "y": 1120,
        "wires": [
            [
                "7ef791fc64aadbef",
                "82cc884e81f468ee"
            ]
        ]
    },
    {
        "id": "7ef791fc64aadbef",
        "type": "mongodb out",
        "z": "6a1f8a5ca3afbf67",
        "mongodb": "9426b3d2a90eb91b",
        "name": "db",
        "collection": "category",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "update",
        "x": 570,
        "y": 1120,
        "wires": []
    },
    {
        "id": "82cc884e81f468ee",
        "type": "http response",
        "z": "6a1f8a5ca3afbf67",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 590,
        "y": 1180,
        "wires": []
    },
    {
        "id": "340b24a0e5d4acf3",
        "type": "function",
        "z": "6a1f8a5ca3afbf67",
        "name": "create new order",
        "func": "msg.payload.deleted = false;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 1320,
        "wires": [
            [
                "9a1f0c7b6e21f4eb",
                "d97995ccb1a92400"
            ]
        ]
    },
    {
        "id": "a914d6e698cff964",
        "type": "http in",
        "z": "6a1f8a5ca3afbf67",
        "name": "",
        "url": "/order/new",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 120,
        "y": 1320,
        "wires": [
            [
                "340b24a0e5d4acf3"
            ]
        ]
    },
    {
        "id": "9a1f0c7b6e21f4eb",
        "type": "mongodb out",
        "z": "6a1f8a5ca3afbf67",
        "mongodb": "9426b3d2a90eb91b",
        "name": "db",
        "collection": "order",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 530,
        "y": 1320,
        "wires": []
    },
    {
        "id": "f8b88c0119147b3c",
        "type": "function",
        "z": "6a1f8a5ca3afbf67",
        "name": "get all order",
        "func": "msg.payload = {};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 1400,
        "wires": [
            [
                "14194c137e9322f6"
            ]
        ]
    },
    {
        "id": "7068907ab451c63e",
        "type": "http in",
        "z": "6a1f8a5ca3afbf67",
        "name": "",
        "url": "/order/all",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 1400,
        "wires": [
            [
                "f8b88c0119147b3c"
            ]
        ]
    },
    {
        "id": "d97995ccb1a92400",
        "type": "http response",
        "z": "6a1f8a5ca3afbf67",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 530,
        "y": 1240,
        "wires": []
    },
    {
        "id": "9a34c74ebd54b462",
        "type": "http response",
        "z": "6a1f8a5ca3afbf67",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 630,
        "y": 1400,
        "wires": []
    },
    {
        "id": "14194c137e9322f6",
        "type": "mongodb in",
        "z": "6a1f8a5ca3afbf67",
        "mongodb": "9426b3d2a90eb91b",
        "name": "db",
        "collection": "order",
        "operation": "find",
        "x": 490,
        "y": 1400,
        "wires": [
            [
                "9a34c74ebd54b462"
            ]
        ]
    },
    {
        "id": "6be75fe244fecf1c",
        "type": "function",
        "z": "6a1f8a5ca3afbf67",
        "name": "delete a order",
        "func": "msg.payload = { \"_id\": objectid(msg.payload._id) }\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "objectid",
                "module": "objectid"
            }
        ],
        "x": 360,
        "y": 1460,
        "wires": [
            [
                "caa9dd829b33827b",
                "a11eca9fbf658ec2"
            ]
        ]
    },
    {
        "id": "1a2348b87381aec4",
        "type": "http in",
        "z": "6a1f8a5ca3afbf67",
        "name": "",
        "url": "/order/delete",
        "method": "delete",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 1460,
        "wires": [
            [
                "6be75fe244fecf1c"
            ]
        ]
    },
    {
        "id": "a11eca9fbf658ec2",
        "type": "http response",
        "z": "6a1f8a5ca3afbf67",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 570,
        "y": 1520,
        "wires": []
    },
    {
        "id": "caa9dd829b33827b",
        "type": "mongodb out",
        "z": "6a1f8a5ca3afbf67",
        "mongodb": "9426b3d2a90eb91b",
        "name": "db",
        "collection": "order",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 570,
        "y": 1460,
        "wires": []
    },
    {
        "id": "6b39ded751125a52",
        "type": "function",
        "z": "6a1f8a5ca3afbf67",
        "name": "get by id a order",
        "func": "msg.payload = { \"_id\": objectid(msg.req.params.id) }\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "objectid",
                "module": "objectid"
            }
        ],
        "x": 320,
        "y": 1580,
        "wires": [
            [
                "da6fd2651558691e"
            ]
        ]
    },
    {
        "id": "76b5bfed5dddb273",
        "type": "http in",
        "z": "6a1f8a5ca3afbf67",
        "name": "",
        "url": "/order/:id",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 1580,
        "wires": [
            [
                "6b39ded751125a52"
            ]
        ]
    },
    {
        "id": "c6badba42bfe4534",
        "type": "http response",
        "z": "6a1f8a5ca3afbf67",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 630,
        "y": 1580,
        "wires": []
    },
    {
        "id": "da6fd2651558691e",
        "type": "mongodb in",
        "z": "6a1f8a5ca3afbf67",
        "mongodb": "9426b3d2a90eb91b",
        "name": "db",
        "collection": "order",
        "operation": "find",
        "x": 490,
        "y": 1580,
        "wires": [
            [
                "c6badba42bfe4534"
            ]
        ]
    },
    {
        "id": "dab50c40623e4a6a",
        "type": "http in",
        "z": "6a1f8a5ca3afbf67",
        "name": "",
        "url": "/order/update",
        "method": "put",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 1640,
        "wires": [
            [
                "09aac37b5fcd3958"
            ]
        ]
    },
    {
        "id": "09aac37b5fcd3958",
        "type": "function",
        "z": "6a1f8a5ca3afbf67",
        "name": "update order by id",
        "func": "msg.query = { \"_id\": objectid(msg.payload._id) }\ndelete msg.payload._id\nmsg.payload = {\n    $set: msg.payload\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "objectid",
                "module": "objectid"
            }
        ],
        "x": 370,
        "y": 1640,
        "wires": [
            [
                "e5cf6243a577345f",
                "6395651fdad06b70"
            ]
        ]
    },
    {
        "id": "e5cf6243a577345f",
        "type": "mongodb out",
        "z": "6a1f8a5ca3afbf67",
        "mongodb": "9426b3d2a90eb91b",
        "name": "db",
        "collection": "order",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "update",
        "x": 570,
        "y": 1640,
        "wires": []
    },
    {
        "id": "6395651fdad06b70",
        "type": "http response",
        "z": "6a1f8a5ca3afbf67",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 590,
        "y": 1700,
        "wires": []
    },
    {
        "id": "4b16a4c928401a15",
        "type": "http in",
        "z": "6a1f8a5ca3afbf67",
        "name": "",
        "url": "/best-selling",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 120,
        "y": 1800,
        "wires": [
            [
                "503e2a2303c29c2a"
            ]
        ]
    },
    {
        "id": "503e2a2303c29c2a",
        "type": "function",
        "z": "6a1f8a5ca3afbf67",
        "name": "Get the top 5 best-selling products based on order quantities",
        "func": "msg.payload = [\n    {\n        $addFields: {\n            productObjId: { $toObjectId: \"$productId\" }\n        }\n    },\n    {\n        $lookup: {\n            from: \"product\",\n            localField: \"productObjId\",\n            foreignField: \"_id\",\n            as: \"product_info\"\n        }\n    },\n    {\n        $group: {\n            _id: \"$productId\",\n            name: { $first: '$product_info.name' },\n            total_quantity: { $sum: \"$quantity\" }\n        }\n    },\n    {\n        $sort: { total_quantity: -1 }\n    },\n    {\n        $limit: 5\n    }\n];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 1800,
        "wires": [
            [
                "09b50dd06e835261"
            ]
        ]
    },
    {
        "id": "09b50dd06e835261",
        "type": "mongodb in",
        "z": "6a1f8a5ca3afbf67",
        "mongodb": "9426b3d2a90eb91b",
        "name": "db",
        "collection": "order",
        "operation": "aggregate",
        "x": 830,
        "y": 1800,
        "wires": [
            [
                "48eb7368e03405a0"
            ]
        ]
    },
    {
        "id": "48eb7368e03405a0",
        "type": "http response",
        "z": "6a1f8a5ca3afbf67",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 970,
        "y": 1800,
        "wires": []
    },
    {
        "id": "a570284774f08615",
        "type": "http in",
        "z": "6a1f8a5ca3afbf67",
        "name": "",
        "url": "/low-stock-product",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 150,
        "y": 1880,
        "wires": [
            [
                "b1f5d83232cc35aa"
            ]
        ]
    },
    {
        "id": "b1f5d83232cc35aa",
        "type": "function",
        "z": "6a1f8a5ca3afbf67",
        "name": "Get the list of products that have been ordered but have a quantity less than 10 in stock",
        "func": "msg.payload = [\n    {\n        $addFields: {\n            available_quantity: { $subtract: [\"$quantity\", { $sum: \"$orders.quantity\" }] }\n        }\n    },\n    {\n        $lookup: {\n            from: \"order\",\n            localField: \"_id\",\n            foreignField: \"productId\",\n            as: \"orders\"\n        }\n    },\n    {\n        $match: {\n            available_quantity: { $lt: 10 }\n        }\n    }\n];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 1880,
        "wires": [
            [
                "0c1270579be853be"
            ]
        ]
    },
    {
        "id": "0c1270579be853be",
        "type": "mongodb in",
        "z": "6a1f8a5ca3afbf67",
        "mongodb": "9426b3d2a90eb91b",
        "name": "db",
        "collection": "product",
        "operation": "aggregate",
        "x": 1010,
        "y": 1880,
        "wires": [
            [
                "3e3dd7bcffa6cbb1"
            ]
        ]
    },
    {
        "id": "3e3dd7bcffa6cbb1",
        "type": "http response",
        "z": "6a1f8a5ca3afbf67",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1130,
        "y": 1880,
        "wires": []
    },
    {
        "id": "1fe7dd99f86068d9",
        "type": "http in",
        "z": "6a1f8a5ca3afbf67",
        "name": "",
        "url": "/total-revenue",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 2020,
        "wires": [
            [
                "fd9bd63ba451ebeb"
            ]
        ]
    },
    {
        "id": "fd9bd63ba451ebeb",
        "type": "function",
        "z": "6a1f8a5ca3afbf67",
        "name": "Get the total revenue generated from orders placed within a specific date range",
        "func": "let startDate = msg.req.query.startDate;\nlet endDate = msg.req.query.endDate;\n\nmsg.payload = [\n    {\n        $match: {\n            date: {\n                $gte: new Date(startDate).getTime(),\n                $lte: new Date(endDate).getTime(),\n            }\n        }\n    },\n    {\n      $project: {\n          revenue: {\n              $multiply: [\"$quantity\", \"$cost\"] \n            }\n        }\n    },\n    {\n        $group: {\n            _id: null,\n            total_revenue: { $sum: \"$revenue\" },\n        }\n    },\n];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 2020,
        "wires": [
            [
                "b349b30f0ef6cb4f"
            ]
        ]
    },
    {
        "id": "b349b30f0ef6cb4f",
        "type": "mongodb in",
        "z": "6a1f8a5ca3afbf67",
        "mongodb": "9426b3d2a90eb91b",
        "name": "db",
        "collection": "order",
        "operation": "aggregate",
        "x": 910,
        "y": 2020,
        "wires": [
            [
                "4fa96a551dcc2819"
            ]
        ]
    },
    {
        "id": "4fa96a551dcc2819",
        "type": "http response",
        "z": "6a1f8a5ca3afbf67",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1030,
        "y": 2020,
        "wires": []
    }
]